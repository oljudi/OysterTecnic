{"ast":null,"code":"var _jsxFileName = \"/Users/oljudi/Documents/prsnl/OysterTecnic/frontend/src/pages/SignUp/Signup.js\";\nimport React, { useContext } from 'react';\nimport { Flex, Stack, Text, FormControl, useToast, InputLeftElement, Button, InputGroup, Input, InputRightElement, Box, Image, RadioGroup, Radio, Divider } from \"@chakra-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faKey, faEyeSlash, faEye, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport Form from \"../../components/Form\";\nimport { MyContext } from '../../context';\nimport { Link } from \"react-router-dom\";\n\nconst Signup = ({\n  history\n}) => {\n  const context = useContext(MyContext);\n  const toast = useToast();\n  const [show1, setShow1] = React.useState(false);\n\n  const handleClick1 = () => setShow1(!show1);\n\n  const [show2, setShow2] = React.useState(false);\n\n  const handleClick2 = () => setShow2(!show2);\n\n  const [pass1, setPass1] = React.useState(\"\");\n\n  const hanldePass1 = e => setPass1(e.target.value);\n\n  const [pass2, setPass2] = React.useState(\"\");\n\n  const handlePass2 = e => setPass2(e.target.value);\n\n  const checkPasswords = () => {};\n\n  const signup = e => {\n    context.handleSignupSubmit(e).then(res => {\n      if (res.success) {\n        toast({\n          title: \"Felicidades!\",\n          description: \"Tu cuenta se ha creado de manera correcta\",\n          status: \"success\",\n          duration: 2500,\n          isClosable: true\n        });\n        history.push('/');\n      } else {\n        toast({\n          title: \"Error\",\n          description: \"Ha ocurrido un error durante su registro\",\n          status: \"error\"\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n      toast({\n        title: \"Error\",\n        description: \"Ha ocurrido un error durante su registro\",\n        status: \"error\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(MyContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, context => {\n    return /*#__PURE__*/React.createElement(Flex, {\n      backgroundColor: \"green\",\n      w: \"100vw\",\n      h: \"100vh\",\n      align: \"center\",\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      align: \"center\",\n      justify: \"center\",\n      size: \"600px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Stack, {\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"/images/logo.png\",\n      alt: \"OysterLogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"2xl\",\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }, \"Oyster es la mano derecha de tus finanzas\"), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"1xl\",\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, \"\\xC1brela en menos de 24 horas, sin contrato forzoso, monto m\\xEDnimo ni comisiones por transferencias.\"))), /*#__PURE__*/React.createElement(Flex, {\n      size: \"700px\",\n      align: \"center\",\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Stack, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      submit: signup,\n      bgColor: \"transparent\",\n      titleButton: \"Abrir mi cuenta\",\n      title: \"Registrate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      isRequired: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputLeftElement, {\n      children: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faUser,\n        size: \"1x\",\n        color: \"gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 57\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"name\",\n      value: context.state.formSignUp.name,\n      onChange: context.handleSignupInput,\n      type: \"text\",\n      placeholder: \"Nombre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(FormControl, {\n      isRequired: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputLeftElement, {\n      children: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faEnvelope,\n        size: \"1x\",\n        color: \"gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 57\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      name: \"email\",\n      value: context.state.formSignUp.email,\n      onChange: context.handleSignupInput,\n      type: \"email\",\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(FormControl, {\n      isRequired: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputLeftElement, {\n      children: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faKey,\n        size: \"1x\",\n        color: \"gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 57\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: show1 ? \"text\" : \"password\",\n      name: \"password\",\n      value: pass1,\n      onChange: hanldePass1,\n      placeholder: \"Constrase\\xF1a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(InputRightElement, {\n      width: \"4.5rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      h: \"1.75rem\",\n      size: \"sm\",\n      onClick: handleClick1,\n      backgroundColor: \"trasnparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 53\n      }\n    }, show1 ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEyeSlash,\n      size: \"1x\",\n      color: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 67\n      }\n    }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      size: \"1x\",\n      color: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 131\n      }\n    }))))), /*#__PURE__*/React.createElement(FormControl, {\n      isRequired: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(InputLeftElement, {\n      children: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faKey,\n        size: \"1x\",\n        color: \"gray\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 57\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: show2 ? \"text\" : \"password\",\n      name: \"password2\",\n      value: pass2,\n      onChange: handlePass2,\n      placeholder: \"Confirma Contrase\\xF1a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(InputRightElement, {\n      width: \"4.5rem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      h: \"1.75rem\",\n      size: \"sm\",\n      onClick: handleClick2,\n      backgroundColor: \"trasnparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 53\n      }\n    }, show2 ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEyeSlash,\n      size: \"1x\",\n      color: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 67\n      }\n    }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      size: \"1x\",\n      color: \"gray\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 131\n      }\n    }))))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"md\",\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }\n    }, \"Tipo de cuenta\"), /*#__PURE__*/React.createElement(RadioGroup, {\n      isInline: true,\n      spacing: 4,\n      onChange: context.handleSignupRadio,\n      value: context.state.formSignUp.accountType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      value: \"Fisica\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 45\n      }\n    }, \"Persona Fisica\"), /*#__PURE__*/React.createElement(Radio, {\n      value: \"Moral\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 45\n      }\n    }, \"Persona Moral\")), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Text, {\n      fontSize: \"sm\",\n      color: \"black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    }, \"Ya tienes cuenta? - \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 61\n      }\n    }, \"Ingresa!!\"))))));\n  });\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/oljudi/Documents/prsnl/OysterTecnic/frontend/src/pages/SignUp/Signup.js"],"names":["React","useContext","Flex","Stack","Text","FormControl","useToast","InputLeftElement","Button","InputGroup","Input","InputRightElement","Box","Image","RadioGroup","Radio","Divider","FontAwesomeIcon","faEnvelope","faKey","faEyeSlash","faEye","faUser","Form","MyContext","Link","Signup","history","context","toast","show1","setShow1","useState","handleClick1","show2","setShow2","handleClick2","pass1","setPass1","hanldePass1","e","target","value","pass2","setPass2","handlePass2","checkPasswords","signup","handleSignupSubmit","then","res","success","title","description","status","duration","isClosable","push","catch","err","console","log","state","formSignUp","name","handleSignupInput","email","handleSignupRadio","accountType"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { \n    Flex, \n    Stack, \n    Text, \n    FormControl, \n    useToast, \n    InputLeftElement, \n    Button, \n    InputGroup, \n    Input, \n    InputRightElement,\n    Box,\n    Image,\n    RadioGroup,\n    Radio,\n    Divider\n } from \"@chakra-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faKey, faEyeSlash, faEye, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport Form from \"../../components/Form\";\nimport { MyContext } from '../../context';\nimport { Link } from \"react-router-dom\";\n\nconst Signup = ({history}) => {\n    const context = useContext(MyContext)\n    const toast = useToast()\n\n    const [show1, setShow1] = React.useState(false);\n    const handleClick1 = () => setShow1(!show1);\n\n    const [show2, setShow2] = React.useState(false);\n    const handleClick2 = () => setShow2(!show2);\n\n    const [pass1, setPass1] = React.useState(\"\")\n    const hanldePass1 = e => setPass1(e.target.value)\n\n    const [pass2, setPass2] = React.useState(\"\")\n    const handlePass2 = e => setPass2(e.target.value)\n\n    const checkPasswords = () => {\n        \n    }\n\n    const signup = e => {\n        context\n            .handleSignupSubmit(e)\n            .then(res => {\n                if(res.success){\n                    toast({\n                    title: \"Felicidades!\",\n                    description: \"Tu cuenta se ha creado de manera correcta\",\n                    status: \"success\",\n                    duration: 2500,\n                    isClosable: true\n                    });\n                    history.push('/')\n                } else {\n                    toast({\n                        title: \"Error\",\n                        description: \"Ha ocurrido un error durante su registro\",\n                        status: \"error\"\n                    })\n                }\n            })\n            .catch(err => {\n                console.log(err);\n                toast({\n                    title: \"Error\",\n                    description: \"Ha ocurrido un error durante su registro\",\n                    status: \"error\"\n                })\n            });\n    }\n\n    return (\n        <MyContext.Consumer>\n            {context => {\n                return(\n                    <Flex\n                        backgroundColor=\"green\"\n                        w=\"100vw\"\n                        h=\"100vh\"\n                        align=\"center\"\n                        justify=\"center\"\n                    >\n                        <Flex align=\"center\">\n                            <Flex align=\"center\" justify=\"center\" size=\"600px\">\n                                <Stack spacing={0}>\n                                    <Box>\n                                        <Image src=\"/images/logo.png\" alt=\"OysterLogo\" />\n                                    </Box>\n                                    <Text fontSize=\"2xl\" color=\"black\">\n                                        Oyster es la mano derecha de tus finanzas\n                                    </Text>\n                                    <Text fontSize=\"1xl\" color=\"black\">\n                                        Ábrela en menos de 24 horas, sin contrato forzoso, monto mínimo ni comisiones por transferencias.\n                                    </Text>\n                                </Stack>\n                            </Flex>\n                            <Flex size=\"700px\" align=\"center\" justify=\"center\">\n                                <Stack>\n                                    <Form submit={signup} bgColor=\"transparent\" titleButton=\"Abrir mi cuenta\" title=\"Registrate\">\n                                        <FormControl isRequired>\n                                            <InputGroup>\n                                                <InputLeftElement\n                                                    children={\n                                                        <FontAwesomeIcon icon={faUser} size=\"1x\" color=\"gray\"/>\n                                                    }\n                                                />\n                                                <Input\n                                                    name=\"name\"\n                                                    value={context.state.formSignUp.name}\n                                                    onChange={context.handleSignupInput}\n                                                    type=\"text\"\n                                                    placeholder=\"Nombre\"\n                                                />\n                                            </InputGroup>\n                                        </FormControl>\n                                        <FormControl isRequired>\n                                            <InputGroup>\n                                                <InputLeftElement\n                                                    children={\n                                                        <FontAwesomeIcon icon={faEnvelope} size=\"1x\" color=\"gray\"/>\n                                                    }\n                                                />\n                                                <Input\n                                                    name=\"email\"\n                                                    value={context.state.formSignUp.email}\n                                                    onChange={context.handleSignupInput}\n                                                    type=\"email\"\n                                                    placeholder=\"Email\"\n                                                />\n                                            </InputGroup>\n                                        </FormControl>\n                                        <FormControl isRequired>\n                                            <InputGroup>\n                                                <InputLeftElement\n                                                    children={\n                                                        <FontAwesomeIcon icon={faKey} size=\"1x\" color=\"gray\" />\n                                                    }\n                                                />\n                                                <Input\n                                                    type={show1 ? \"text\" : \"password\"}\n                                                    name=\"password\"\n                                                    value={pass1}\n                                                    onChange={hanldePass1}\n                                                    placeholder=\"Constraseña\"\n                                                />\n                                                <InputRightElement width=\"4.5rem\">\n                                                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick1} backgroundColor=\"trasnparent\">\n                                                        {show1 ?  <FontAwesomeIcon icon={faEyeSlash} size=\"1x\" color=\"gray\" /> :  <FontAwesomeIcon icon={faEye} size=\"1x\" color=\"gray\" />}\n                                                    </Button>\n                                                </InputRightElement>\n                                            </InputGroup>\n                                        </FormControl>\n                                        <FormControl isRequired>\n                                            <InputGroup>\n                                                <InputLeftElement\n                                                    children={\n                                                        <FontAwesomeIcon icon={faKey} size=\"1x\" color=\"gray\" />\n                                                    }\n                                                />\n                                                <Input\n                                                    type={show2 ? \"text\" : \"password\"}\n                                                    name=\"password2\"\n                                                    value={pass2}\n                                                    onChange={handlePass2}\n                                                    placeholder=\"Confirma Contraseña\"\n                                                />\n                                                <InputRightElement width=\"4.5rem\">\n                                                    <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick2} backgroundColor=\"trasnparent\">\n                                                        {show2 ?  <FontAwesomeIcon icon={faEyeSlash} size=\"1x\" color=\"gray\" /> :  <FontAwesomeIcon icon={faEye} size=\"1x\" color=\"gray\" />}\n                                                    </Button>\n                                                </InputRightElement>\n                                            </InputGroup>\n                                        </FormControl>\n                                        <Divider />\n                                        <Text fontSize=\"md\" color=\"black\">\n                                            Tipo de cuenta\n                                        </Text>\n                                        <RadioGroup \n                                            isInline \n                                            spacing={4}\n                                            onChange={context.handleSignupRadio}\n                                            value={context.state.formSignUp.accountType}\n                                            >\n                                            <Radio value=\"Fisica\">\n                                                Persona Fisica\n                                            </Radio>\n                                            <Radio value=\"Moral\">\n                                                Persona Moral\n                                            </Radio>\n                                        </RadioGroup>\n                                        <Divider />\n                                    </Form>\n                                    <Text fontSize=\"sm\" color=\"black\">\n                                        Ya tienes cuenta? - <Link to=\"/\">Ingresa!!</Link>\n                                    </Text>\n                                </Stack>\n                            </Flex>\n                        </Flex>\n                    </Flex>\n                )\n            }}\n        </MyContext.Consumer>\n    );\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}